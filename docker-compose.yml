version: '3.7'

services:
  pgadmin:
    container_name: pgadmin
    depends_on:
      - postgres
    env_file: .env
    image: dpage/pgadmin4
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.local`)
      - traefik.http.routers.pgadmin.entrypoints=web
    networks:
      - postgres-network
      - traefik-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/root/.pgadmin:rw

  postgres:
    container_name: postgres
    env_file: .env
    image: postgres:alpine
    networks:
      - postgres-network
    ports:
      - '54321:5432'
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data:rw

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - redis-network
    ports:
      - '63791:6379'
    restart: unless-stopped
    volumes:
      - redis_data:/var/lib/redis:rw

  traefik:
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--providers.docker.network=docker-webstack_traefik-network'
    container_name: traefik
    image: traefik:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.local`)
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.service=api@internal
    networks:
      - traefik-network
    ports:
      - '80:80'
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  wikijs:
    container_name: wikijs
    depends_on:
      - postgres
    env_file: .env
    environment:
      DB_HOST: postgres
      DB_NAME: wikijs
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_PORT: 5432
      DB_TYPE: postgres
      DB_USER: ${POSTGRES_USER}
    image: requarks/wiki:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.wikijs.rule=Host(`wikijs.local`)
      - traefik.http.routers.wikijs.entrypoints=web
    networks:
      - postgres-network
      - traefik-network
    restart: unless-stopped

volumes:
  pgadmin_data: {}
  pgdata: {}
  redis_data: {}

networks:
  postgres-network: {}
  redis-network: {}
  traefik-network: {}
